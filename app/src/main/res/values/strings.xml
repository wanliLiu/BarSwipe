<resources>
    <string name="app_name">ColStu</string>
    <string name="title_activity_second">SecondActivity</string>
        <string name="translucent_background">Example of how you can make an
            activity have a translucent background, compositing over
            whatever is behind it.</string>

    <string-array name="sampleStrings">
        <item>"Android provides a rich application framework that allows you to build innovative apps and games for mobile devices in a Java language environment. The documents listed in the left navigation provide details about how to build apps using Android's various APIs."</item>
        <item>"Android apps are built as a combination of distinct components that can be invoked individually. For instance, an individual activity provides a single screen for a user interface, and a service independently performs work in the background."</item>
        <item>"From one component you can start another component using an intent. You can even start a component in a different app, such an activity in a maps app to show an address. This model provides multiple entry points for a single app and allows any app to behave as a user's "default" for an action that other apps may invoke."</item>
        <item>"You can query the availability of device features at runtime if any app features require specific hardware such as a camera. If necessary, you can also declare features your app requires so app markets such as Google Play Store do not allow installation on devices that do not support that feature."</item>
        <item>"Android provides an adaptive app framework that allows you to provide unique resources for different device configurations. For example, you can create different XML layout files for different screen sizes and the system determines which layout to apply based on the current device's screen size."</item>
        <item>"Android provides a rich application framework that allows you to build innovative apps and games for mobile devices in a Java language environment. The documents listed in the left navigation provide details about how to build apps using Android's various APIs."</item>
        <item>"Android provides a rich application framework that allows you to build innovative apps and games for mobile devices in a Java language environment. The documents listed in the left navigation provide details about how to build apps using Android's various APIs."</item>
        <item>"Android provides a rich application framework that allows you to build innovative apps and games for mobile devices in a Java language environment. The documents listed in the left navigation provide details about how to build apps using Android's various APIs."</item>
        <item>"Android provides a rich application framework that allows you to build innovative apps and games for mobile devices in a Java language environment. The documents listed in the left navigation provide details about how to build apps using Android's various APIs."</item>
        <item>"Android provides a rich application framework that allows you to build innovative apps and games for mobile devices in a Java language environment. The documents listed in the left navigation provide details about how to build apps using Android's various APIs."</item>
        <item>"test"</item>
    </string-array>

    <string name="pick_photo">选择图片</string>
    <string name="pick_photo_without_camera">选择图片（不带拍照按钮且点击不预览图片）</string>
    <string name="pick_one_photo">选择单张图片</string>
    <string name="pick_photo_gif">选择gif图片</string>
    <string name="multiple_pick_photo">多次进入PhotoPicker选择图片</string>


    <string name="action_settings">Settings</string>
    <string name="lorem_ipsum">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam efficitur ipsum in placerat molestie. Fusce quis mauris a enim sollicitudin ultrices non eget velit. Aliquam eu pulvinar enim. Praesent libero nisl, ultricies vel maximus eu, maximus et nisi. Phasellus pharetra nec ligula vitae mollis. Quisque porttitor ornare magna, quis dignissim libero aliquam id. Donec sollicitudin ultrices ante, a semper erat tristique in. Vivamus sodales in ligula at sodales. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Nulla tempus bibendum nibh, ac tincidunt quam convallis non. Proin dolor nunc, egestas et tortor consequat, dignissim lacinia odio. Ut ut aliquet erat.  Ut non scelerisque elit. Morbi dolor neque, iaculis eu justo rutrum, aliquet dictum mauris. Phasellus quis massa ut ligula feugiat congue a et dolor. Etiam a dui a sapien ornare accumsan ac ut lorem. Suspendisse vehicula lorem dapibus nibh rhoncus ultricies. Proin sem nulla, elementum quis pharetra quis, commodo vitae nisi. Donec urna orci, posuere et iaculis sit amet, fringilla quis sapien. Pellentesque nec posuere felis. Praesent malesuada tellus nisi, non dictum justo interdum eget. Quisque mollis euismod libero, non aliquam lorem interdum vitae. Aliquam vehicula efficitur purus eget rutrum. Sed pulvinar fermentum risus ac viverra. Cras laoreet ligula quam, ac lacinia nisl elementum in. Aenean velit arcu, euismod a venenatis non, pulvinar pulvinar massa. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam efficitur ipsum in placerat molestie. Fusce quis mauris a enim sollicitudin ultrices non eget velit. Aliquam eu pulvinar enim. Praesent libero nisl, ultricies vel maximus eu, maximus et nisi. Phasellus pharetra nec ligula vitae mollis. Quisque porttitor ornare magna, quis dignissim libero aliquam id. Donec sollicitudin ultrices ante, a semper erat tristique in. Vivamus sodales in ligula at sodales. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Nulla tempus bibendum nibh, ac tincidunt quam convallis non. Proin dolor nunc, egestas et tortor consequat, dignissim lacinia odio. Ut ut aliquet erat.  Ut non scelerisque elit. Morbi dolor neque, iaculis eu justo rutrum, aliquet dictum mauris. Phasellus quis massa ut ligula feugiat congue a et dolor. Etiam a dui a sapien ornare accumsan ac ut lorem. Suspendisse vehicula lorem dapibus nibh rhoncus ultricies. Proin sem nulla, elementum quis pharetra quis, commodo vitae nisi. Donec urna orci, posuere et iaculis sit amet, fringilla quis sapien. Pellentesque nec posuere felis. Praesent malesuada tellus nisi, non dictum justo interdum eget. Quisque mollis euismod libero, non aliquam lorem interdum vitae. Aliquam vehicula efficitur purus eget rutrum. Sed pulvinar fermentum risus ac viverra. Cras laoreet ligula quam, ac lacinia nisl elementum in. Aenean velit arcu, euismod a venenatis non, pulvinar pulvinar massa.</string>
    <string name="home">Home</string>
    <string name="favourite">Favourite</string>
    <string name="downloaded">Downloaded</string>
    <string name="more">More</string>
    <string name="settings">Settings</string>

    <string name="hint">Type emoji here</string>
    <string name="i_love_emojicon">I \ue32d emojicon</string>
    <string name="use_system_default">Use system default emojicon</string>

    <string name="hello_world">Hello world!</string>
    <string name="cheese_ipsum"> 曾经有一份真诚的爱情放在我面前
    ，我没有珍惜，等我失去的时候我才后悔莫及，人世间最痛苦的事莫过于此。如果上天能够给我一个再来一次的机会，我会对那个女孩子说三个字：我爱你。如果非要在这份爱上加上一个期限，我希望是……一万年！
</string>


    <string name="dummy_text1">Far far away, behind the word mountains, far from the countries Vokalia and Consonantia, there live the blind texts. Separated they live in Bookmarksgrove right at the coast of the Semantics, a large language ocean. A small river named Duden flows by their place and supplies it with the necessary regelialia. It is a paradisematic country, in which roasted parts of sentences fly into your mouth. Even the all-powerful Pointing has no control about the blind texts it is an almost unorthographic life One day however a small line of blind text by the name of Lorem Ipsum decided to leave for the far World of Grammar.</string>
    <string name="dummy_text2">Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim. Donec pede justo, fringilla vel, aliquet nec, vulputate eget, arcu. In enim justo, rhoncus ut, imperdiet a, venenatis vitae, justo. Nullam dictum felis eu pede mollis pretium. Integer tincidunt.\\n\\nCras dapibus. Vivamus elementum semper nisi. Aenean vulputate eleifend tellus. Aenean leo ligula, porttitor eu, consequat vitae, eleifend ac, enim. Aliquam lorem ante, dapibus in, viverra quis, feugiat a, tellus. Phasellus viverra nulla ut metus varius laoreet. Quisque rutrum. Aenean imperdiet. Etiam ultricies nisi vel augue. Curabitur ullamcorper ultricies nisi. Nam eget dui. Etiam rhoncus. Maecenas tempus, tellus eget condimentum rhoncus, sem quam semper libero, sit amet adipiscing sem neque sed ipsum. Nam quam nunc, blandit vel, luctus pulvinar, hendrerit id, lorem. Maecenas nec odio et ante tincidunt tempus. Donec vitae sapien ut libero venenatis faucibus. Nullam quis ante. Etiam sit amet orci eget eros faucibus tincidunt. Duis leo. Sed fringilla mauris sit amet nibh. Donec sodales sagittis magna. Sed consequat, leo eget bibendum sodales, augue velit cursus nunc, quis gravida magna mi a libero. Fusce vulputate eleifend sapien.</string>

    <string name="title_demo1">In ScrollView</string>
    <string name="title_demo2">In ListView</string>

    <string name="button1Text">Add Word</string>
    <string name="button2Text">View Poem</string>

    <string name="default_image">Default Image</string>
    <string name="failure_image">Failure Image</string>
    <string name="view_pager">ViewPager</string>


    <string name="des_base">Swipelayout Curton .......</string>
    <string name="des_Test">自定义倾斜TextView</string>
    <string name="str_scroller">Scroller scrollBy scrollTo offsetLeftAndRight学习</string>
    <string name="str_scroller1">用Scroller 自定义水平滑动ViewGroup </string>
    <string name="str_prode">用Scroller 实现下滑翻页的效果</string>
    <string name="str_viewDrageHelper">1.大致理解差不多了，主要是要多看类似的运用\n2.ViewDragHelper本质通过Scroller的StartScroll以及View的offsetTopAndBottomOffset and OffsetLeftandRightOffset来实现移动的</string>
    <string name="str_ainimation">1.使用path绘制多边形\n2.曲线绘制的实现根据可绘制宽高和时间，然后根据加速度，来获取曲线上的点，然后用path绘制\n3.各种不同的动画加载效果\n</string>
    <string name="str_drage">1.DragGridView 具体实现方式\n
        2.Animation的几种使用方式进一步加强  TranslateAnimation  Animation.ABSOLUTE Animation.RELATIVE_TO_SELF  Animation.RELATIVE_TO_PARENT\n
        3.自定义视图中通过dispatchDraw来绘制想要的东西
    </string>
    <string name="str_ExpanAbleTextView">1.TabLayout google官方出的可以学习一下\n2.Linearlayout 和textview同时动画\n3.测量的时候获取Textview内容的高度，以此作为动画的高度差</string>
    <string name="str_ExpanAbleTextView1">1.完全自定义，需要自己实现获取相应位置的视图，移动，滚动\n2.上下滑动屏幕是通过不断layout所有childview，同样移动视图也是通过layout来实现\n3.有空自己可以写一个通过移动，通过layout移动某个视图到某个位置</string>
    <string name="str_collectAnimation">1.学习ObjectAnimator.ofFloat的多参数使用，是一个连续的过程\n2.主要是看具体的实现方式，用的时候，我想我会拿出我想要的部分\n3.把一些常用的动画封装起来，简单易用</string>
    <string name="str_AdvenceView">1.各个android版本---本地到浏览器的文件上传功能\n2.在webview基础上集成一些现有的功能，这个到时候可以借鉴一下</string>
    <string name="str_swipeLayout">1.有点学习困乏了这个，后面再看。。。\n2.结合实际，ViewDragHelper具体怎么用\n3.结合已经学习的Scroller ViewDragHelper,理解各种场景的运用</string>
    <string name="str_fresco">学习facebook fresco\n后续会把一些会用到的方式加进来</string>
    <string name="str_multi">这个主要是学习自己写的图片缓存,加载大图片\n还需要再研究一下,实际项目是否可以用</string>
    <string name="str_material">还没有看\n 1.materials design学习,常用组件使用,这里最关心的就是启动动画过度的实现,用的suppport中的ActivityOptionsCompat</string>

    <string name="str_fresco_photoview">还没有看\n 1.android.support.design.widget 可以参考这个进一步学习一下相关design 组件的使用\n2.fresco 和photoview结合 \n 这个是直接在继承Photoview 然用DraweeHolder freso加载图片，设置photoview bitmap,相对于上面那个效果不好，gif显示有问题</string>
    <string name="str_fresco_photoview1">1.PhotoDraweeView photview的复制品，但不是photoview  \n这个是直接模拟Photoview的操作，继承SimpleDraweeView，用photoview attecher来弄，相对原生，只是方式借鉴photoview \n2.和ScaleImage合用实现长图的显示</string>
    <string name="str_jsWeb">还没看\n  在学习学习js 和java相关的东西</string>
    <string name="str_luban">1.这里使用RxJava方式了，初步接触响应式编程\n2.图片的压缩算法，类似于wechat图片压缩效果</string>
    <string name="str_photopicker">1.大致看了一下,还可以,但是需要改进,实际情况。\n2.查询图片可以借鉴,比如需要显示gif,就可以把查询条件上加上gif,反之不加,这样就没有gif图片,这个地方可以借鉴\n3.这里gif显示是用的google glide显示的,但是长图和大图还是不支持</string>
    <string name="str_ImageScale">1.图片显示很好，但是gif和Fresco的融合还有问题\2.继续研究</string>
    <string name="str_fresco_demo">1.Fresco 各种使用demo\n2.和其他第三方imageview的使用</string>
    <string name="str_retrofit">1.Retrofit 寻求更好的网络请求框架</string>
    <string name="str_emjoin">1.主要是学习一下自定义这块，用这个有个平台</string>
    <string name="str_viewView">natvie使用VideoView播放视频，提供网络视频播放demo,具体的可以修改，先放到这里</string>
    <string name="str_newFramge">1.CoordinatorLayout Behavior 学习，还没看\n在这里尝试新搭建Android框架,所有需要测试的工作</string>
    <string name="str_processors">freso 各种processor 图片预处理</string>
    <string name="str_rebound">还没看\n SpringScrollViewExample的点击事件有问题--1.Rebound 各种demo 参考</string>
    <string name="str_marquee">还没看\n 布局移动，left up right down 方向</string>
    <string name="title_activity_scrolling">ScrollingActivity</string>
    <string name="large_text">
        "Material is the metaphor.\n\n"

        "A material metaphor is the unifying theory of a rationalized space and a system of motion."
        "The material is grounded in tactile reality, inspired by the study of paper and ink, yet "
        "technologically advanced and open to imagination and magic.\n"
        "Surfaces and edges of the material provide visual cues that are grounded in reality. The "
        "use of familiar tactile attributes helps users quickly understand affordances. Yet the "
        "flexibility of the material creates new affordances that supercede those in the physical "
        "world, without breaking the rules of physics.\n"
        "The fundamentals of light, surface, and movement are key to conveying how objects move, "
        "interact, and exist in space and in relation to each other. Realistic lighting shows "
        "seams, divides space, and indicates moving parts.\n\n"

        "Bold, graphic, intentional.\n\n"

        "The foundational elements of print based design typography, grids, space, scale, color, "
        "and use of imagery guide visual treatments. These elements do far more than please the "
        "eye. They create hierarchy, meaning, and focus. Deliberate color choices, edge to edge "
        "imagery, large scale typography, and intentional white space create a bold and graphic "
        "interface that immerse the user in the experience.\n"
        "An emphasis on user actions makes core functionality immediately apparent and provides "
        "waypoints for the user.\n\n"

        "Motion provides meaning.\n\n"

        "Motion respects and reinforces the user as the prime mover. Primary user actions are "
        "inflection points that initiate motion, transforming the whole design.\n"
        "All action takes place in a single environment. Objects are presented to the user without "
        "breaking the continuity of experience even as they transform and reorganize.\n"
        "Motion is meaningful and appropriate, serving to focus attention and maintain continuity. "
        "Feedback is subtle yet clear. Transitions are efﬁcient yet coherent.\n\n"

        "3D world.\n\n"

        "The material environment is a 3D space, which means all objects have x, y, and z "
        "dimensions. The z-axis is perpendicularly aligned to the plane of the display, with the "
        "positive z-axis extending towards the viewer. Every sheet of material occupies a single "
        "position along the z-axis and has a standard 1dp thickness.\n"
        "On the web, the z-axis is used for layering and not for perspective. The 3D world is "
        "emulated by manipulating the y-axis.\n\n"

        "Light and shadow.\n\n"

        "Within the material environment, virtual lights illuminate the scene. Key lights create "
        "directional shadows, while ambient light creates soft shadows from all angles.\n"
        "Shadows in the material environment are cast by these two light sources. In Android "
        "development, shadows occur when light sources are blocked by sheets of material at "
        "various positions along the z-axis. On the web, shadows are depicted by manipulating the "
        "y-axis only. The following example shows the card with a height of 6dp.\n\n"

        "Resting elevation.\n\n"

        "All material objects, regardless of size, have a resting elevation, or default elevation "
        "that does not change. If an object changes elevation, it should return to its resting "
        "elevation as soon as possible.\n\n"

        "Component elevations.\n\n"

        "The resting elevation for a component type is consistent across apps (e.g., FAB elevation "
        "does not vary from 6dp in one app to 16dp in another app).\n"
        "Components may have different resting elevations across platforms, depending on the depth "
        "of the environment (e.g., TV has a greater depth than mobile or desktop).\n\n"

        "Responsive elevation and dynamic elevation offsets.\n\n"

        "Some component types have responsive elevation, meaning they change elevation in response "
        "to user input (e.g., normal, focused, and pressed) or system events. These elevation "
        "changes are consistently implemented using dynamic elevation offsets.\n"
        "Dynamic elevation offsets are the goal elevation that a component moves towards, relative "
        "to the component’s resting state. They ensure that elevation changes are consistent "
        "across actions and component types. For example, all components that lift on press have "
        "the same elevation change relative to their resting elevation.\n"
        "Once the input event is completed or cancelled, the component will return to its resting "
        "elevation.\n\n"

        "Avoiding elevation interference.\n\n"

        "Components with responsive elevations may encounter other components as they move between "
        "their resting elevations and dynamic elevation offsets. Because material cannot pass "
        "through other material, components avoid interfering with one another any number of ways, "
        "whether on a per component basis or using the entire app layout.\n"
        "On a component level, components can move or be removed before they cause interference. "
        "For example, a floating action button (FAB) can disappear or move off screen before a "
        "user picks up a card, or it can move if a snackbar appears.\n"
        "On the layout level, design your app layout to minimize opportunities for interference. "
        "For example, position the FAB to one side of stream of a cards so the FAB won’t interfere "
        "when a user tries to pick up one of cards.\n\n"
    </string>

    <string name="title_activity_fullscreen">FullscreenActivity</string>
    <string name="dummy_button">Dummy Button</string>
    <string name="dummy_content">DUMMY\nCONTENT</string>

    <string name="app_license">License</string>
    <string name="app_github">GitHub</string>
    <string name="app_github_url"><![CDATA[https://github.com/ogaclejapan/ArcLayout]]></string>

    <string name="reverse">Reverse</string>

    <string name="title_center">Center</string>
    <string name="title_left">Left</string>
    <string name="title_right">Right</string>
    <string name="title_top">Top</string>
    <string name="title_top_left">Top Left</string>
    <string name="title_top_right">Top Right</string>
    <string name="title_bottom">Bottom</string>
    <string name="title_bottom_left">Bottom Left</string>
    <string name="title_bottom_right">Bottom Right</string>
    <string name="title_advanced_freeangle">Advanced: Free angle</string>
    <string name="title_advanced_tumblr">Advanced: Like a Tumblr</string>
    <string name="title_advanced_path">Advanced: Like a Path</string>

    <string name="note_center"><![CDATA[app:arc_origin=&quot;<b>center</b>&quot;<br/>Full arc of from 270 degrees]]></string>
    <string name="note_left"><![CDATA[app:arc_origin=&quot;<b>left</b>&quot;<br/>Semi arc of from 270 degrees]]></string>
    <string name="note_right"><![CDATA[app:arc_origin=&quot;<b>right</b>&quot;<br/>Semi arc of from 90 degrees]]></string>
    <string name="note_top"><![CDATA[app:arc_origin=&quot;<b>top</b>&quot;<br/>Semi arc of from 0 degrees]]></string>
    <string name="note_top_left"><![CDATA[app:arc_origin=&quot;<b>top|left</b>&quot;<br/>Quarter arc of from 0 degrees]]></string>
    <string name="note_top_right"><![CDATA[app:arc_origin=&quot;<b>top|right</b>&quot;<br/>Quarter arc of from 90 degrees]]></string>
    <string name="note_bottom"><![CDATA[app:arc_origin=&quot;<b>bottom</b>&quot;<br/>Semi arc of from 180 degrees]]></string>
    <string name="note_bottom_left"><![CDATA[app:arc_origin=&quot;<b>bottom|left</b>&quot;<br/>Quarter arc of from 270 degrees]]></string>
    <string name="note_bottom_right"><![CDATA[app:arc_origin=&quot;<b>bottom|right</b>&quot;<br/>Quarter arc of from 180 degrees]]></string>
    <string name="note_advanced_freeangle"><![CDATA[app:arc_freeAngle=&quot;<b>true</b>&quot;<br/>Can be free angle to place the child view]]></string>
    <string name="note_advanced_tumblr">Try pressing the button</string>
    <string name="note_advanced_path">Try pressing the button</string>

    <string name="str_arclayout">1.enum 新用法，不仅可以自定义方法还可以重写，参看Demo和Arc的用法\n2.获取枚举的值，可以用api，Enum.name(),同样转换Enum.valueof(Name),在传递的时候可以这样子\n3.AnimatorSet.playSequentially一个完成接下来另外一个\n4.Log.d(tag, String.format(format, args));这种方式不错!</string>
    <string name="str_volume">音频相关学习 MediaPlayer AudioTrack MediaRecorder AudioRecord</string>
</resources>
