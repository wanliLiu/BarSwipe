apply plugin: 'com.android.library'


version = '3.5.0'


dependencies {
    api fileTree(dir: 'libs', include: '*.jar')
    api "com.facebook.fresco:fresco:${FRESCO_VERSION}"
    api "com.facebook.fresco:imagepipeline:${FRESCO_VERSION}"
    api "com.facebook.fresco:animated-gif:${FRESCO_VERSION}"
    api "com.facebook.fresco:webpsupport:${FRESCO_VERSION}"
    api "com.facebook.fresco:animated-webp:${FRESCO_VERSION}"
    api "com.android.support:support-annotations:${supportPackageVersion}"
}

android {
    compileSdkVersion project.ANDROID_COMPILE_SDK_VERSION
    buildToolsVersion project.ANDROID_BUILD_TOOLS_VERSION
    defaultConfig {
        minSdkVersion project.ANDROID_MIN_SDK_VERSION
        targetSdkVersion project.ANDROID_TARGET_SDK_VERSION
        versionName project.VERSION_NAME
        versionCode Integer.parseInt(project.VERSION_CODE)
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        // Move the tests to tests/java, tests/res, etc...
        instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }
    lintOptions {
        abortOnError false
    }
}